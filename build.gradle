// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {

    ext {
        // Versions
        ext.kotlin_version = "1.4.10"
        ext.daggerVersion = '2.27'
        ext.stethoVersion = '1.5.1'
        ext.ankoVersion = '0.10.8'
        ext.okHttpVersion = '4.0.1'
        ext.retrofitVersion = '2.6.1'
        ext.lifecycleVersion = "2.2.0"
        ext.camerax_version = "1.0.0-beta12"
        ext.material_version = "1.2.1"
        ext.fragmentVersion = '1.3.0-beta01'
        ext.appcompatVersion = "1.2.0"
        ext.core_ktx_version = "1.3.2"
        ext.javax_annotation_version = "10.0-b28"
        ext.rxjava_version = "2.2.19"
        ext.rxkotlin_version = "2.4.0"
        ext.rxandroid_version = "2.1.1"
        ext.timber_version = "4.7.1"
        ext.services_location_version = "17.1.0"
        ext.rxlocation_version = "1.0.5"

        ext.hiltVersion = '2.29-alpha'
        ext.hiltAndroidxVersion = '1.0.0-alpha02'
        ext.locationVersion = '17.0.0'
        ext.mapsVersion = '17.0.0'
        ext.mapsServicesVersion = '0.10.2'
        ext.mapsUtilsVersion = '0.6.2'

        ext.rxJavaVersion = '2.2.19'
        ext.rxAndroidVersion = '2.1.1'

        ext.ktxVersion = '1.5.0-alpha04'
        ext.lifecycleVersion = "2.2.0"
        ext.lifecycleVersionExtension = '2.2.0'
        ext.collectionx = '1.1.0'
        ext.glideVersion = '4.11.0'
        ext.glideTransformationsVersion = '3.3.0'


    }

    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.google.dagger:hilt-android-gradle-plugin:${hiltVersion}"
        classpath 'com.google.gms:google-services:4.3.4'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}